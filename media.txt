Rating Bar:
android:numStars="5"
        android:stepSize="1"
        android:rating="0"
        android:isIndicator="false"

  val ratingBar = findViewById<RatingBar>(R.id.ratingBar)

        ratingBar.setOnRatingBarChangeListener { _, rating, _ ->
            Toast.makeText(this, "Rated: $rating stars", Toast.LENGTH_SHORT).show()

<style name="CustomRatingBar" parent="Theme.AppCompat.Light">
    <item name="colorControlNormal">#CCCCCC</item> <!-- gray for unselected -->
    <item name="colorControlActivated">#FFD700</item> <!-- gold for selected -->
</style>


Audio & Video:

private lateinit var mediaPlayer: MediaPlayer
private lateinit var videoView: VideoView
private fun setupAudio() {
    mediaPlayer = MediaPlayer.create(this, R.raw.audio_file)
    val playButton = findViewById<Button>(R.id.play_audio_button)
    playButton.setOnClickListener {
        if (mediaPlayer.isPlaying) {
            mediaPlayer.pause()
            playButton.text = "Play Audio"
        } else {
            mediaPlayer.start()
            playButton.text = "Pause Audio"
        }
    }
    val stopButton = findViewById<Button>(R.id.stop_audio_button)
    stopButton.setOnClickListener {
        mediaPlayer.stop()
        mediaPlayer = MediaPlayer.create(this, R.raw.audio_file)
        playButton.text = "Play Audio"
    }
}
private fun setupVideo() {
    videoView = findViewById(R.id.video_view)
    val videoPath = "android.resource://$packageName/${R.raw.video_file}"
    videoView.setVideoURI(Uri.parse(videoPath))
    val playButton = findViewById<Button>(R.id.play_video_button)
    playButton.setOnClickListener {
        if (videoView.isPlaying) {
            videoView.pause()
            playButton.text = "Play Video"
        } else {
            videoView.start()
            playButton.text = "Pause Video"
        }
    }
    val stopButton = findViewById<Button>(R.id.stop_video_button)
    stopButton.setOnClickListener {
        videoView.stopPlayback()
        videoView.setVideoURI(Uri.parse(videoPath))
        playButton.text = "Play Video"
    }
}

override fun onDestroy() {
    super.onDestroy()
    if (::mediaPlayer.isInitialized) {
        mediaPlayer.release()
    }
}

Animation

<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android"
    android:fillAfter="true">
    <alpha
        android:duration="1000"
        android:fromAlpha="0.0"
        android:toAlpha="1.0" />
    <scale
        android:duration="1000"
        android:fromXScale="0.8"
        android:fromYScale="0.8"
        android:pivotX="50%"
        android:pivotY="50%"
        android:toXScale="1.0"
        android:toYScale="1.0" />
</set>


<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
        <translate
            android:duration="800"
            android:fromYDelta="100%"
            android:toYDelta="0%" />
        <alpha
            android:duration="800"
            android:fromAlpha="0.0"
            android:toAlpha="1.0" />
</set>

 val titleTextView: TextView = findViewById(R.id.tvTitle)
 val descriptionTextView: TextView = findViewById(R.id.tvDescription)
  val fadeInAnimation = AnimationUtils.loadAnimation(this, R.anim.fade_in)
   val slideUpAnimation = AnimationUtils.loadAnimation(this, R.anim.slide_up)
   titleTextView.startAnimation(fadeInAnimation)
 descriptionTextView.startAnimation(slideUpAnimation)

SMS & WHATSAPP

private fun sendSMS() {
        try {
            val smsIntent = Intent(Intent.ACTION_VIEW)
            smsIntent.data = Uri.parse("sms:$phoneNumber")
            smsIntent.putExtra("sms_body", "Hello from my app!")
            startActivity(smsIntent)
            Toast.makeText(this, "Opening SMS to $phoneNumber", Toast.LENGTH_SHORT).show()
        } catch (e: Exception) {
            Toast.makeText(this, "Unable to open SMS app", Toast.LENGTH_SHORT).show()
        }
    }

private fun openWhatsApp() {
        try {
            val uri = Uri.parse("https://api.whatsapp.com/send?phone=+91$phoneNumber")
            val whatsappIntent = Intent(Intent.ACTION_VIEW, uri)
            startActivity(whatsappIntent)
            Toast.makeText(this, "Opening WhatsApp for $phoneNumber", Toast.LENGTH_SHORT).show()
        } catch (e: Exception) {
            Toast.makeText(this, "WhatsApp not installed or unable to open", Toast.LENGTH_SHORT).show()
        }
    }


 <uses-permission android:name="android.permission.SEND_SMS"/>
 <uses-permission android:name="android.permission.READ_PHONE_STATE"/>
private val SMS_PERMISSION_REQUEST_CODE = 101
private fun receiveSMS() {
        if (ContextCompat.checkSelfPermission(
                this,
                Manifest.permission.SEND_SMS
            ) != PackageManager.PERMISSION_GRANTED
        ) {
            ActivityCompat.requestPermissions(
                this,
                arrayOf(Manifest.permission.SEND_SMS),
                SMS_PERMISSION_REQUEST_CODE
            )
        } else {
            try {
                val smsManager = SmsManager.getDefault()
                smsManager.sendTextMessage(
                    phoneNumber,
                    null,
                    "Request to receive SMS from app",
                    null,
                    null
                )
                Toast.makeText(
                    this,
                    "Request sent to $phoneNumber to send SMS back",
                    Toast.LENGTH_SHORT
                ).show()
            } catch (e: Exception) {
                Toast.makeText(
                    this,
                    "Failed to send SMS request: ${e.message}",
                    Toast.LENGTH_SHORT
                ).show()
            }
        }
    }

override fun onRequestPermissionsResult(
        requestCode: Int,
        permissions: Array<out String>,
        grantResults: IntArray
    ) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults)

        if (requestCode == SMS_PERMISSION_REQUEST_CODE) {
            if (grantResults.isNotEmpty() && grantResults[0] == PackageManager.PERMISSION_GRANTED) {
                receiveSMS()
            } else {
                Toast.makeText(
                    this,
                    "SMS permission denied. Cannot request SMS.",
                    Toast.LENGTH_SHORT
                ).show()
            }
        }
    }

